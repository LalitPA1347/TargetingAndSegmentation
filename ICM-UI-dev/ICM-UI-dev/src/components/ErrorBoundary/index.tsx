import React from 'react';
import { Button } from '@mui/material';
import Grid from '@mui/material/Grid2';
import { get } from 'lodash';
// import ErrorImage from '../../../assets/images/error.png';

import './styles.scss';

// Created class component for using componentDidCatch method

class ErrorBoundary extends React.Component {
  // Below line can cause issue later
  constructor(props: unknown) {
    super(props);
    this.state = { hasError: false, errorMsg: [] };
  }

  static getDerivedStateFromError() {
    return { hasError: true };
  }

  // Below line can cause issue later
  componentDidCatch(error: unknown) {
    this.setState({ errorMsg: error });
  }

  render() {
    if (get(this, 'state.hasError', null)) {
      return (
        <div>
          <Grid className="error-main-container">
            <Grid className="error-main-right-form-head">
              <svg
                width="247"
                height="45"
                viewBox="0 0 247 45"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                style={{ cursor: 'pointer' }}
              >
                <path
                  d="M8.15625 3V35H0.421875V3H8.15625ZM21.5323 21.3125V35H13.8917V11H21.1573V15.4062H21.423C21.9542 13.9375 22.8605 12.7865 24.1417 11.9531C25.423 11.1094 26.949 10.6875 28.7198 10.6875C30.4073 10.6875 31.8709 11.0677 33.1105 11.8281C34.3605 12.5781 35.3292 13.6302 36.0167 14.9844C36.7146 16.3281 37.0584 17.901 37.048 19.7031V35H29.4073V21.2031C29.4178 19.8698 29.0792 18.8281 28.3917 18.0781C27.7146 17.3281 26.7719 16.9531 25.5636 16.9531C24.7615 16.9531 24.0532 17.1302 23.4386 17.4844C22.8344 17.8281 22.3657 18.3229 22.0323 18.9687C21.7094 19.6146 21.5428 20.3958 21.5323 21.3125ZM63.6116 18.3281L56.5959 18.5156C56.523 18.0156 56.3251 17.5729 56.0022 17.1875C55.6793 16.7917 55.2574 16.4844 54.7366 16.2656C54.2261 16.0365 53.6324 15.9219 52.9553 15.9219C52.0699 15.9219 51.3147 16.099 50.6897 16.4531C50.0751 16.8073 49.773 17.2865 49.7834 17.8906C49.773 18.3594 49.9605 18.7656 50.3459 19.1094C50.7418 19.4531 51.4449 19.7292 52.4553 19.9375L57.0803 20.8125C59.4761 21.2708 61.2574 22.0312 62.4241 23.0937C63.6011 24.1562 64.1949 25.5625 64.2053 27.3125C64.1949 28.9583 63.7053 30.3906 62.7366 31.6094C61.7782 32.8281 60.4657 33.776 58.7991 34.4531C57.1324 35.1198 55.2261 35.4531 53.0803 35.4531C49.6532 35.4531 46.9501 34.75 44.9709 33.3437C43.0022 31.9271 41.8772 30.0312 41.5959 27.6562L49.1428 27.4687C49.3095 28.3437 49.7418 29.0104 50.4397 29.4687C51.1376 29.9271 52.0282 30.1562 53.1116 30.1562C54.0907 30.1562 54.8876 29.974 55.5022 29.6094C56.1168 29.2448 56.4293 28.7604 56.4397 28.1562C56.4293 27.6146 56.1897 27.1823 55.7209 26.8594C55.2522 26.526 54.5178 26.2656 53.5178 26.0781L49.3303 25.2812C46.9241 24.8437 45.1324 24.0365 43.9553 22.8594C42.7782 21.6719 42.1949 20.1615 42.2053 18.3281C42.1949 16.724 42.622 15.3542 43.4866 14.2187C44.3511 13.0729 45.5803 12.1979 47.1741 11.5937C48.7678 10.9896 50.648 10.6875 52.8147 10.6875C56.0647 10.6875 58.6272 11.3698 60.5022 12.7344C62.3772 14.0885 63.4136 15.9531 63.6116 18.3281ZM68.847 35V11H76.4877V35H68.847ZM72.6752 8.20313C71.6022 8.20313 70.6804 7.84896 69.9095 7.14062C69.1387 6.42187 68.7533 5.55729 68.7533 4.54687C68.7533 3.54687 69.1387 2.69271 69.9095 1.98437C70.6804 1.26562 71.6022 0.906248 72.6752 0.906248C73.7585 0.906248 74.6804 1.26562 75.4408 1.98437C76.2116 2.69271 76.597 3.54687 76.597 4.54687C76.597 5.55729 76.2116 6.42187 75.4408 7.14062C74.6804 7.84896 73.7585 8.20313 72.6752 8.20313ZM93.4184 44.5C91.1372 44.5 89.1841 44.1823 87.5591 43.5469C85.9341 42.9115 84.658 42.0417 83.7309 40.9375C82.8039 39.8333 82.2466 38.5833 82.0591 37.1875L89.2934 36.7813C89.4289 37.2708 89.6789 37.6979 90.0434 38.0625C90.4184 38.4271 90.9028 38.7083 91.4966 38.9063C92.1007 39.1042 92.8091 39.2031 93.6216 39.2031C94.9028 39.2031 95.9601 38.8906 96.7934 38.2656C97.6372 37.651 98.0591 36.5729 98.0591 35.0313V30.8125H97.7934C97.4914 31.5521 97.033 32.2135 96.4184 32.7969C95.8039 33.3802 95.0382 33.8385 94.1216 34.1719C93.2153 34.5052 92.1736 34.6719 90.9966 34.6719C89.2466 34.6719 87.6424 34.2656 86.1841 33.4531C84.7361 32.6302 83.5747 31.3594 82.6997 29.6406C81.8351 27.9115 81.4028 25.6875 81.4028 22.9688C81.4028 20.1667 81.8507 17.8594 82.7466 16.0469C83.6424 14.224 84.8143 12.875 86.2622 12C87.7205 11.125 89.2882 10.6875 90.9653 10.6875C92.2257 10.6875 93.3039 10.9062 94.1997 11.3437C95.1059 11.7708 95.8507 12.3229 96.4341 13C97.0174 13.6771 97.4601 14.3802 97.7622 15.1094H97.9809V11H105.59V35.0938C105.59 37.125 105.08 38.8385 104.059 40.2344C103.038 41.6302 101.611 42.6875 99.7778 43.4063C97.9445 44.1354 95.8247 44.5 93.4184 44.5ZM93.6528 29.1094C94.5799 29.1094 95.3716 28.8646 96.0278 28.375C96.6841 27.8854 97.1893 27.1823 97.5434 26.2656C97.8976 25.349 98.0747 24.25 98.0747 22.9688C98.0747 21.6667 97.8976 20.5469 97.5434 19.6094C97.1997 18.6615 96.6945 17.9323 96.0278 17.4219C95.3716 16.9115 94.5799 16.6562 93.6528 16.6562C92.7049 16.6562 91.9028 16.9167 91.2466 17.4375C90.5903 17.9583 90.0903 18.6927 89.7466 19.6406C89.4132 20.5781 89.2466 21.6875 89.2466 22.9688C89.2466 24.25 89.4184 25.349 89.7622 26.2656C90.1059 27.1823 90.6007 27.8854 91.2466 28.375C91.9028 28.8646 92.7049 29.1094 93.6528 29.1094ZM118.982 21.3125V35H111.341V3H118.732V15.4062H118.998C119.539 13.9271 120.425 12.7708 121.654 11.9375C122.893 11.1042 124.409 10.6875 126.201 10.6875C127.888 10.6875 129.357 11.0625 130.607 11.8125C131.857 12.5521 132.826 13.599 133.513 14.9531C134.211 16.3073 134.555 17.8906 134.545 19.7031V35H126.904V21.2031C126.914 19.8698 126.581 18.8281 125.904 18.0781C125.227 17.3281 124.274 16.9531 123.045 16.9531C122.242 16.9531 121.534 17.1302 120.92 17.4844C120.315 17.8281 119.841 18.3229 119.498 18.9687C119.164 19.6146 118.992 20.3958 118.982 21.3125ZM153.741 11V16.625H138.6V11H153.741ZM141.772 5.25H149.413V27.4531C149.413 27.9219 149.486 28.3021 149.632 28.5937C149.788 28.875 150.012 29.0781 150.303 29.2031C150.595 29.3177 150.944 29.375 151.35 29.375C151.642 29.375 151.949 29.349 152.272 29.2969C152.606 29.2344 152.856 29.1823 153.022 29.1406L154.178 34.6562C153.814 34.7604 153.298 34.8906 152.632 35.0469C151.975 35.2031 151.189 35.3021 150.272 35.3438C148.481 35.4271 146.944 35.2187 145.663 34.7187C144.392 34.2083 143.418 33.4167 142.741 32.3437C142.074 31.2708 141.751 29.9219 141.772 28.2969V5.25Z"
                  fill="black"
                />
                <path
                  d="M164.394 35H157.144L168.191 3H176.91L187.941 35H180.691L172.676 10.3125H172.426L164.394 35ZM163.941 22.4219H181.066V27.7031H163.941V22.4219ZM219.403 14.2031H212.56C212.435 13.3177 212.179 12.5312 211.794 11.8437C211.408 11.1458 210.914 10.5521 210.31 10.0625C209.705 9.57292 209.007 9.19792 208.216 8.9375C207.435 8.67708 206.586 8.54688 205.669 8.54688C204.013 8.54688 202.57 8.95833 201.341 9.78125C200.112 10.5937 199.158 11.7812 198.481 13.3438C197.804 14.8958 197.466 16.7812 197.466 19C197.466 21.2812 197.804 23.1979 198.481 24.75C199.169 26.3021 200.127 27.474 201.356 28.2656C202.586 29.0573 204.007 29.4531 205.622 29.4531C206.528 29.4531 207.367 29.3333 208.138 29.0938C208.919 28.8542 209.612 28.5052 210.216 28.0469C210.82 27.5781 211.32 27.0104 211.716 26.3438C212.122 25.6771 212.403 24.9167 212.56 24.0625L219.403 24.0937C219.226 25.5625 218.783 26.9792 218.075 28.3438C217.377 29.6979 216.435 30.9115 215.247 31.9844C214.07 33.0469 212.664 33.8906 211.028 34.5156C209.403 35.1302 207.565 35.4375 205.513 35.4375C202.658 35.4375 200.106 34.7917 197.856 33.5C195.617 32.2083 193.846 30.3385 192.544 27.8906C191.252 25.4427 190.606 22.4792 190.606 19C190.606 15.5104 191.263 12.5417 192.575 10.0938C193.888 7.64583 195.669 5.78125 197.919 4.5C200.169 3.20833 202.7 2.5625 205.513 2.5625C207.367 2.5625 209.086 2.82292 210.669 3.34375C212.263 3.86458 213.674 4.625 214.903 5.625C216.132 6.61458 217.132 7.82812 217.903 9.26562C218.685 10.7031 219.185 12.349 219.403 14.2031ZM225.135 35V3H246.697V8.57812H231.9V16.2031H245.588V21.7812H231.9V29.4219H246.76V35H225.135Z"
                  fill="#FC1111"
                />
              </svg>
            </Grid>
          </Grid>
          <Grid className="error-main-container">
            <Grid className="error-main-right-form-head">{/* <img alt="Error" src={ErrorImage} /> */}</Grid>
          </Grid>
          <div className="h2_error">SOMETHING WENT WRONG HERE</div>
          <p className="error_content">Stack : {get(this, 'state.errorMsg.stack', null)}</p>
          <div className="reload_button">
            <Button variant="contained" onClick={() => window.location.reload()}>
              Reload
            </Button>
          </div>
        </div>
      );
    }

    return get(this, 'props.children', null);
  }
}

export default ErrorBoundary;
